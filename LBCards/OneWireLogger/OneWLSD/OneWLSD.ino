//////////////////////////////////////////////////////////////////////////////
//  OneWL - One-Wire Data Logger.
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// Includes follow
//////////////////////////////////////////////////////////////////////////////

#include <SPI.h>
#include <OneWire.h>
#include <SD.h>
#include <Wire.h>
#include "RTClib.h"
#include <LandBoards_OneWireLogger.h>
#include <Adafruit_GFX.h>      // Core graphics library
#include <Adafruit_ST7735.h>   // Hardware-specific library

//////////////////////////////////////////////////////////////////////////////
// defines follow
//////////////////////////////////////////////////////////////////////////////

//#define SERIAL_OUT
#undef SERIAL_OUT

#define	TFT_RED      0x001F    // Colors are reversed on my display from Adafruit's library
#define	TFT_BLUE     0xF800

//////////////////////////////////////////////////////////////////////////////
// enums follow
//////////////////////////////////////////////////////////////////////////////

enum MENUITEMS
{
  LOG2SCRN_MENU,
  LOG2USB_MENU,
};

//////////////////////////////////////////////////////////////////////////////
// Global variables follow
//////////////////////////////////////////////////////////////////////////////

uint8_t menuState;  // Used to implement the menuing state machine

uint8_t sensorNumber;
uint8_t sensorAddr;
uint8_t firstRun;
float temps1Wire[32];
float fahrenheit;

// class initializers - most initialize hardware
LandBoards_OneWireLogger myOneWireLogger;
Adafruit_ST7735 tft = Adafruit_ST7735(LCD_CS, LCD_DC, LCD_RST);  // HW SPI
OneWire  ds(ONE_WIRE);  // on pin 
RTC_DS1307 RTC;

DateTime setRTCTime;

//////////////////////////////////////////////////////////////////////////////
// the setup routine runs once when you press reset:
//////////////////////////////////////////////////////////////////////////////

void setup() 
{
  Serial.begin(115200);
#ifdef SERIAL_OUT
  Serial.print(F("1-Wire Logger"));
#endif

  // TFT init
  analogWrite(BACKLIGHT, 0);
  tft.initR(INITR_REDTAB);    // I actually have a black tab on my part

  // Start up the One Wire Interface
  sensorNumber = 0;

  Wire.begin();
  RTC.begin();
  if (! RTC.isrunning() )
  {
    tft.print("Replace RTC Battery");
    RTC.adjust(DateTime(__DATE__, __TIME__));   
  }

  // Set up the init menu state
  menuState = LOG2SCRN_MENU;
}

//////////////////////////////////////////////////////////////////////////////////////
// loop - runs over and over again forever:
//////////////////////////////////////////////////////////////////////////////////////

void loop() 
{
  menuRefresh();
  menuNav();
}

